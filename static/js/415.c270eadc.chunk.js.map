{"version":3,"file":"static/js/415.c270eadc.chunk.js","mappings":"2NAKMA,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,oFAEF,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IACG,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,CAAtB,IAGHC,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnBC,EAA2BD,EAA3BC,GAAIC,EAAuBF,EAAvBE,YAAaC,EAAUH,EAAVG,MACnBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,IAAD,WACE,SAACf,EAAD,CAASgB,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMJ,GAA7C,UACE,UAACK,EAAA,EAAD,CAAKC,MAAM,QAAX,WACE,gBACEC,IAAG,yCAAoCT,GACvCU,IAAI,GACJF,MAAM,SAER,0BACE,wBAAKP,YAMhB,EC5BYU,EAAmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACjC,OACE,SAACL,EAAA,EAAD,CACEM,GAAG,KACHC,QAAQ,OACRC,SAAS,OACTC,eAAe,SACfC,GAAI,EACJC,GAAI,EACJC,IAAK,EACLC,IAAK,EARP,SAUGR,EAAOS,OAAS,GACfT,EAAOU,KAAI,SAAAxB,GAAK,OAAI,SAACD,EAAD,CAA2BC,MAAOA,GAAjBA,EAAMC,GAA3B,KAGvB,C,6FCCD,UAda,WACX,OAA4BwB,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAmBC,KAAKH,EACzB,GAAE,KAGD,SAAC,IAAD,CAAKX,GAAG,OAAR,UACE,SAAC,IAAD,CAAkBD,OAAQA,KAG/B,C,mMChBGgB,EAAO,gCACPC,EAAG,mCAEA,SAAeH,IAAtB,4CAAO,OAAP,oBAAO,6GAE0BI,EAAAA,EAAAA,IAAA,UACxBF,EADwB,uCACcC,IAHxC,cAEGE,EAFH,yBAMIA,EAAeC,KAAKC,SANxB,gCAQHC,QAAQC,MAAM,KAAMC,SARjB,gFAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEwBR,EAAAA,EAAAA,IAAA,UACtBF,EADsB,kBACLU,EADK,oBACcT,IAHtC,cAEGU,EAFH,yBAMIA,EAAaP,MANjB,gCAQHE,QAAQC,MAAM,KAAMC,SARjB,gFAYA,SAAeI,EAAtB,kC,aAAO,O,oBAAA,kGAAmCC,EAAnC,EAAmCA,WAAnC,IAA+CC,KAAAA,OAA/C,MAAsD,EAAtD,oBAEkBZ,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iCACgBC,EADhB,kBAC6BY,EAD7B,iBACgDC,IAHlE,cAEG9B,EAFH,yBAMIA,EAAOoB,KAAKC,SANhB,gCAQHC,QAAQC,MAAM,KAAMC,SARjB,gFAkBA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA4BL,GAA5B,gGAEwBR,EAAAA,EAAAA,IAAA,UACtBF,EADsB,kBACLU,EADK,4BACsBT,IAH9C,cAEGU,EAFH,yBAMIA,EAAaP,KAAKY,MANtB,gCAQHV,QAAQC,MAAM,KAAMC,SARjB,gFAYA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAA+BP,GAA/B,gGAEwBR,EAAAA,EAAAA,IAAA,UACtBF,EADsB,kBACLU,EADK,4BACsBT,IAH9C,cAEGU,EAFH,yBAMIA,EAAaP,KAAKC,SANtB,gCAQHC,QAAQC,MAAM,KAAMC,SARjB,gF","sources":["components/MoviesItem.jsx","components/SharedMoviesList.jsx","pages/Home.jsx","services/movieDbApi.js"],"sourcesContent":["import { ListItem } from '../pages/Home.styled';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Box } from './Box';\n\nconst NavItem = styled(NavLink)`\n  text-decoration: none;\n  color: ${p => p.theme.colors.black};\n  font-size: ${p => p.theme.fontSizes.s};\n`;\n\nexport const MoviesItem = ({ movie }) => {\n  const { id, poster_path, title } = movie;\n  const location = useLocation();\n\n  return (\n    <ListItem>\n      <NavItem to={`/movies/${id}`} state={{ from: location }}>\n        <Box width=\"300px\">\n          <img\n            src={`https://image.tmdb.org/t/p/w342${poster_path}`}\n            alt=\"\"\n            width=\"300\"\n          />\n          <div>\n            <h3>{title}</h3>\n          </div>\n        </Box>\n      </NavItem>\n    </ListItem>\n  );\n};\n","import { Box } from 'components/Box';\nimport { MoviesItem } from './MoviesItem';\n\nexport const SharedMoviesList = ({ movies }) => {\n  return (\n    <Box\n      as=\"ul\"\n      display=\"flex\"\n      flexWrap=\"wrap\"\n      justifyContent=\"center\"\n      mt={5}\n      mb={0}\n      mr={-4}\n      ml={-4}\n    >\n      {movies.length > 0 &&\n        movies.map(movie => <MoviesItem key={movie.id} movie={movie} />)}\n    </Box>\n  );\n};\n","import { Box } from 'components/Box';\nimport { SharedMoviesList } from 'components/SharedMoviesList';\nimport { useEffect, useState } from 'react';\n\nimport { getTrendingMovie } from 'services/movieDbApi';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovie().then(setMovies);\n  }, []);\n\n  return (\n    <Box as=\"main\">\n      <SharedMoviesList movies={movies} />\n    </Box>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nlet baseUrl = `https://api.themoviedb.org/3/`;\nlet key = `e6acfc4fc0153671a91c6ac155f53696`;\n\nexport async function getTrendingMovie() {\n  try {\n    const trendingMovies = await axios.get(\n      `${baseUrl}trending/movie/week?api_key=${key}`\n    );\n\n    return trendingMovies.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport async function getMovieById(movieId) {\n  try {\n    const movieDetails = await axios.get(\n      `${baseUrl}/movie/${movieId}?api_key=${key}`\n    );\n\n    return movieDetails.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport async function getSearchedMovies({ searhQuery, page = 1 }) {\n  try {\n    const movies = await axios.get(\n      `${baseUrl}/search/movie?api_key=${key}&query=${searhQuery}&page=${page}`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\n// export function getSearchedMovies({ searhQuery, currentPage = 1 }) {\n//   return axios.get(\n//     `${baseUrl}/search/movie?api_key=${key}&query=${searhQuery}&page=${currentPage}`\n//   );\n// }\n\nexport async function getMovieCast(movieId) {\n  try {\n    const movieDetails = await axios.get(\n      `${baseUrl}/movie/${movieId}/credits?api_key=${key}`\n    );\n\n    return movieDetails.data.cast;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const movieDetails = await axios.get(\n      `${baseUrl}/movie/${movieId}/reviews?api_key=${key}`\n    );\n\n    return movieDetails.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n"],"names":["NavItem","styled","NavLink","p","theme","colors","black","fontSizes","s","MoviesItem","movie","id","poster_path","title","location","useLocation","to","state","from","Box","width","src","alt","SharedMoviesList","movies","as","display","flexWrap","justifyContent","mt","mb","mr","ml","length","map","useState","setMovies","useEffect","getTrendingMovie","then","baseUrl","key","axios","trendingMovies","data","results","console","error","message","getMovieById","movieId","movieDetails","getSearchedMovies","searhQuery","page","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}