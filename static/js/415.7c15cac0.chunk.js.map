{"version":3,"file":"static/js/415.7c15cac0.chunk.js","mappings":"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","sources":["components/MoviesItem.styled.js","components/MoviesItem.jsx","components/SharedMoviesList.jsx","pages/Home.jsx","services/movieDbApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieCard = styled.div`\n  transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  width: 300px;\n  box-shadow: 0 14px 28px rgba(160, 152, 152, 0.25),\n    0 10px 10px rgba(160, 152, 152, 0.25);\n  &:hover {\n    transform: scale(1.04);\n  }\n`;\n\nexport const TextBlock = styled.div`\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 0;\n  margin-bottom: 0;\n\n  padding: 0 5px 5px 5px;\n`;\n\nexport const DescriptionTitle = styled.h3`\n  font-family: Roboto;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.33;\n  margin-bottom: 0;\n  text-transform: uppercase;\n  padding: 5px 5px 0px 5px;\n`;\n","import { ListItem } from '../pages/Home.styled';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { DescriptionTitle, MovieCard, TextBlock } from './MoviesItem.styled';\n\nconst NavItem = styled(NavLink)`\n  text-decoration: none;\n  color: ${p => p.theme.colors.black};\n  font-size: ${p => p.theme.fontSizes.s};\n`;\n\nexport const MoviesItem = ({ movie, genres }) => {\n  const { id, poster_path, title, release_date } = movie;\n  const location = useLocation();\n\n  console.log(genres);\n\n  return (\n    <ListItem>\n      <NavItem to={`/movies/${id}`} state={{ from: location }}>\n        <MovieCard>\n          <img\n            src={`https://image.tmdb.org/t/p/w342${poster_path}`}\n            alt=\"\"\n            width=\"300\"\n            height=\"450\"\n          />\n          <div>\n            <TextBlock>\n              <DescriptionTitle>{title}</DescriptionTitle>\n              <span>{release_date.slice(0, 4)}</span>\n            </TextBlock>\n          </div>\n        </MovieCard>\n      </NavItem>\n    </ListItem>\n  );\n};\n","import { Box } from 'components/Box';\nimport { MoviesItem } from './MoviesItem';\nimport { getGenres } from 'services/movieDbApi';\nimport { useEffect, useState } from 'react';\n\nexport function SharedMoviesList({ movies }) {\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    getGenres().then(setGenres);\n  }, []);\n\n  console.log(genres);\n  return (\n    <Box\n      as=\"ul\"\n      display=\"flex\"\n      flexWrap=\"wrap\"\n      justifyContent=\"center\"\n      mt={5}\n      mb={0}\n      mr={-4}\n      ml={-4}\n    >\n      {movies.length > 0 &&\n        movies.map(movie => (\n          <MoviesItem key={movie.id} movie={movie} genres={genres} />\n        ))}\n\n      {/* {movies.length > 0 &&\n              movies.map(movie => <MoviesItem key={movie.id} movie={movie} />)} */}\n    </Box>\n  );\n}\n","import { Box } from 'components/Box';\nimport { SharedMoviesList } from 'components/SharedMoviesList';\nimport { useEffect, useState } from 'react';\n\nimport { getTrendingMovie } from 'services/movieDbApi';\n\nconst Home = () => {\n  const [films, setFilms] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovie().then(setFilms);\n  }, []);\n\n  return (\n    <Box as=\"main\">\n      <SharedMoviesList movies={films} />\n    </Box>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nlet baseUrl = `https://api.themoviedb.org/3/`;\nlet key = `e6acfc4fc0153671a91c6ac155f53696`;\n\nexport async function getTrendingMovie() {\n  try {\n    const trendingMovies = await axios.get(\n      `${baseUrl}trending/movie/week?api_key=${key}`\n    );\n\n    return trendingMovies.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport async function getGenres() {\n  try {\n    const genres = await axios.get(\n      `${baseUrl}genre/movie/list?api_key=${key}&language=en-US`\n    );\n\n    return genres.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n  // return fetch(\n  //   `https://api.themoviedb.org/3/genre/movie/list?api_key=${key}&language=en-US`\n  // )\n  //   .then(res => res.json())\n  //   .then(result => {\n  //     genres = result.genres;\n  //     return result.genres;\n  //   });\n}\n\nexport async function getMovieById(movieId) {\n  try {\n    const movieDetails = await axios.get(\n      `${baseUrl}/movie/${movieId}?api_key=${key}`\n    );\n\n    return movieDetails.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport async function getSearchedMovies({ searhQuery, page = 1 }) {\n  try {\n    const movies = await axios.get(\n      `${baseUrl}/search/movie?api_key=${key}&query=${searhQuery}&page=${page}`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\n// export function getSearchedMovies({ searhQuery, currentPage = 1 }) {\n//   return axios.get(\n//     `${baseUrl}/search/movie?api_key=${key}&query=${searhQuery}&page=${currentPage}`\n//   );\n// }\n\nexport async function getMovieCast(movieId) {\n  try {\n    const movieDetails = await axios.get(\n      `${baseUrl}/movie/${movieId}/credits?api_key=${key}`\n    );\n\n    return movieDetails.data.cast;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const movieDetails = await axios.get(\n      `${baseUrl}/movie/${movieId}/reviews?api_key=${key}`\n    );\n\n    return movieDetails.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n"],"names":["MovieCard","styled","TextBlock","DescriptionTitle","NavItem","NavLink","p","theme","colors","black","fontSizes","s","MoviesItem","movie","genres","id","poster_path","title","release_date","location","useLocation","console","log","to","state","from","src","alt","width","height","slice","SharedMoviesList","movies","useState","setGenres","useEffect","getGenres","then","Box","as","display","flexWrap","justifyContent","mt","mb","mr","ml","length","map","films","setFilms","getTrendingMovie","baseUrl","key","axios","trendingMovies","data","results","error","message","getMovieById","movieId","movieDetails","getSearchedMovies","searhQuery","page","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}