{"version":3,"file":"static/js/779.67ad6689.chunk.js","mappings":"2OAEaA,EAAaC,EAAAA,GAAAA,GAAH,+FAGF,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAITC,EAAcJ,EAAAA,GAAAA,EAAH,6C,SC0BxB,EA7BgB,WACd,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,KAAKL,EAC/B,GAAE,CAACC,KAGF,8BACGF,EAAQO,OAAS,GAChB,SAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,SACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,UAAClB,EAAD,YACE,SAACe,EAAA,EAAD,CAAKC,GAAG,KAAKG,GAAG,IAAhB,SACGD,EAAOE,UAGV,SAACf,EAAD,UAAca,EAAOG,YANN,OAWrB,uEAIP,C,2NC/BGC,EAAO,gCACPC,EAAG,mCAEA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAE0BC,EAAAA,EAAAA,IAAA,UACxBH,EADwB,uCACcC,IAHxC,cAEGG,EAFH,yBAMIA,EAAeC,KAAKC,SANxB,gCAQHC,QAAQC,MAAM,KAAMC,SARjB,gFAYA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEkBP,EAAAA,EAAAA,IAAA,UAChBH,EADgB,oCACmBC,EADnB,oBAFlB,cAEGU,EAFH,yBAMIA,EAAON,MANX,gCAQHE,QAAQC,MAAM,KAAMC,SARjB,gFAoBA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BzB,GAA5B,gGAEwBgB,EAAAA,EAAAA,IAAA,UACtBH,EADsB,kBACLb,EADK,oBACcc,IAHtC,cAEGY,EAFH,yBAMIA,EAAaR,MANjB,gCAQHE,QAAQC,MAAM,KAAMC,SARjB,gFAYA,SAAeK,EAAtB,kC,aAAO,O,oBAAA,kGAAmCC,EAAnC,EAAmCA,WAAnC,IAA+CC,KAAAA,OAA/C,MAAsD,EAAtD,oBAEkBb,EAAAA,EAAAA,IAAA,UAChBH,EADgB,iCACgBC,EADhB,kBAC6Bc,EAD7B,iBACgDC,IAHlE,cAEGC,EAFH,yBAMIA,EAAOZ,KAAKC,SANhB,gCAQHC,QAAQC,MAAM,KAAMC,SARjB,gFAkBA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAA4B/B,GAA5B,gGAEwBgB,EAAAA,EAAAA,IAAA,UACtBH,EADsB,kBACLb,EADK,4BACsBc,IAH9C,cAEGY,EAFH,yBAMIA,EAAaR,KAAKc,MANtB,gCAQHZ,QAAQC,MAAM,KAAMC,SARjB,gFAYA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,gGAEwBgB,EAAAA,EAAAA,IAAA,UACtBH,EADsB,kBACLb,EADK,4BACsBc,IAH9C,cAEGY,EAFH,yBAMIA,EAAaR,KAAKC,SANtB,gCAQHC,QAAQC,MAAM,KAAMC,SARjB,gF","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/movieDbApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewItem = styled.li`\n  width: 80%;\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.space[5]}px;\n  }\n`;\n\nexport const TextContent = styled.p`\n  line-height: 1.4;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/movieDbApi';\nimport { Box } from '../Box';\nimport { ReviewItem, TextContent } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <Box as=\"ul\">\n          {reviews.map(review => (\n            <ReviewItem>\n              <Box as=\"h3\" mb=\"5\">\n                {review.author}\n              </Box>\n\n              <TextContent>{review.content}</TextContent>\n            </ReviewItem>\n          ))}\n        </Box>\n      ) : (\n        <h3> We dont have any reviews for this movie.</h3>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nlet baseUrl = `https://api.themoviedb.org/3/`;\nlet key = `e6acfc4fc0153671a91c6ac155f53696`;\n\nexport async function getTrendingMovie() {\n  try {\n    const trendingMovies = await axios.get(\n      `${baseUrl}trending/movie/week?api_key=${key}`\n    );\n\n    return trendingMovies.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport async function getGenres() {\n  try {\n    const genres = await axios.get(\n      `${baseUrl}genre/movie/list?api_key=${key}&language=en-US`\n    );\n\n    return genres.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n  // return fetch(\n  //   `https://api.themoviedb.org/3/genre/movie/list?api_key=${key}&language=en-US`\n  // )\n  //   .then(res => res.json())\n  //   .then(result => {\n  //     genres = result.genres;\n  //     return result.genres;\n  //   });\n}\n\nexport async function getMovieById(movieId) {\n  try {\n    const movieDetails = await axios.get(\n      `${baseUrl}/movie/${movieId}?api_key=${key}`\n    );\n\n    return movieDetails.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport async function getSearchedMovies({ searhQuery, page = 1 }) {\n  try {\n    const movies = await axios.get(\n      `${baseUrl}/search/movie?api_key=${key}&query=${searhQuery}&page=${page}`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\n// export function getSearchedMovies({ searhQuery, currentPage = 1 }) {\n//   return axios.get(\n//     `${baseUrl}/search/movie?api_key=${key}&query=${searhQuery}&page=${currentPage}`\n//   );\n// }\n\nexport async function getMovieCast(movieId) {\n  try {\n    const movieDetails = await axios.get(\n      `${baseUrl}/movie/${movieId}/credits?api_key=${key}`\n    );\n\n    return movieDetails.data.cast;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const movieDetails = await axios.get(\n      `${baseUrl}/movie/${movieId}/reviews?api_key=${key}`\n    );\n\n    return movieDetails.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n"],"names":["ReviewItem","styled","p","theme","space","TextContent","useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","then","length","Box","as","map","review","mb","author","content","baseUrl","key","getTrendingMovie","axios","trendingMovies","data","results","console","error","message","getGenres","genres","getMovieById","movieDetails","getSearchedMovies","searhQuery","page","movies","getMovieCast","cast"],"sourceRoot":""}