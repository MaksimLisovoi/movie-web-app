{"version":3,"file":"static/js/90.a7ec8c4e.chunk.js","mappings":"8NAEaA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OACE,8BACGA,EAAKC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAArB,OACR,UAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,EAAE,IAAIC,KAAK,IAAxB,WACE,gBACEC,IAAG,yCAAoCN,GACvCO,IAAI,GACJC,MAAM,MACNC,OAAO,SAET,wBAAKR,MAP0BF,EADzB,KAaf,ECkBD,EA7Ba,WACX,OAAwBW,EAAAA,EAAAA,UAAS,IAAjC,eAAOb,EAAP,KAAac,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,KAAKL,EAC5B,GAAE,CAACC,IAECf,EAML,OAFAoB,QAAQC,IAAIrB,IAGV,+BACE,SAACK,EAAA,EAAD,CACEC,GAAG,KACHgB,QAAQ,OACRC,SAAS,OACTC,GAAI,EACJC,eAAe,SALjB,UAOE,SAAC1B,EAAD,CAAUC,KAAMA,OAIvB,C,2NChCG0B,EAAO,gCACPC,EAAG,mCAEA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAE0BC,EAAAA,EAAAA,IAAA,UACxBH,EADwB,uCACcC,IAHxC,cAEGG,EAFH,yBAMIA,EAAeC,KAAKC,SANxB,gCAQHZ,QAAQa,MAAM,KAAMC,SARjB,gFAYA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEkBN,EAAAA,EAAAA,IAAA,UAChBH,EADgB,oCACmBC,EADnB,oBAFlB,cAEGS,EAFH,yBAMIA,EAAOL,MANX,gCAQHX,QAAQa,MAAM,KAAMC,SARjB,gFAoBA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BtB,GAA5B,gGAEwBc,EAAAA,EAAAA,IAAA,UACtBH,EADsB,kBACLX,EADK,oBACcY,IAHtC,cAEGW,EAFH,yBAMIA,EAAaP,MANjB,gCAQHX,QAAQa,MAAM,KAAMC,SARjB,gFAYA,SAAeK,EAAtB,kC,aAAO,O,oBAAA,kGAAmCC,EAAnC,EAAmCA,WAAnC,IAA+CC,KAAAA,OAA/C,MAAsD,EAAtD,oBAEkBZ,EAAAA,EAAAA,IAAA,UAChBH,EADgB,iCACgBC,EADhB,kBAC6Ba,EAD7B,iBACgDC,IAHlE,cAEGC,EAFH,yBAMIA,EAAOX,KAAKC,SANhB,gCAQHZ,QAAQa,MAAM,KAAMC,SARjB,gFAkBA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,gGAEwBc,EAAAA,EAAAA,IAAA,UACtBH,EADsB,kBACLX,EADK,4BACsBY,IAH9C,cAEGW,EAFH,yBAMIA,EAAaP,KAAK/B,MANtB,gCAQHoB,QAAQa,MAAM,KAAMC,SARjB,gFAYA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAA+B5B,GAA/B,gGAEwBc,EAAAA,EAAAA,IAAA,UACtBH,EADsB,kBACLX,EADK,4BACsBY,IAH9C,cAEGW,EAFH,yBAMIA,EAAaP,KAAKC,SANtB,gCAQHZ,QAAQa,MAAM,KAAMC,SARjB,gF","sources":["components/Cast/CastCard.jsx","components/Cast/Cast.jsx","services/movieDbApi.js"],"sourcesContent":["import { Box } from 'components/Box';\n\nexport const CastCard = ({ cast }) => {\n  return (\n    <>\n      {cast.map(({ id, profile_path, name }) => (\n        <Box as=\"li\" p=\"3\" flex=\"0\" key={id}>\n          <img\n            src={`https://image.tmdb.org/t/p/w342${profile_path}`}\n            alt=\"\"\n            width=\"200\"\n            height=\"300\"\n          />\n          <h3>{name}</h3>\n        </Box>\n      ))}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/movieDbApi';\nimport { Box } from '../Box';\nimport { CastCard } from './CastCard';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(movieId).then(setCast);\n  }, [movieId]);\n\n  if (!cast) {\n    return;\n  }\n\n  console.log(cast);\n\n  return (\n    <>\n      <Box\n        as=\"ul\"\n        display=\"flex\"\n        flexWrap=\"wrap\"\n        m={-3}\n        justifyContent=\"center\"\n      >\n        <CastCard cast={cast} />\n      </Box>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nlet baseUrl = `https://api.themoviedb.org/3/`;\nlet key = `e6acfc4fc0153671a91c6ac155f53696`;\n\nexport async function getTrendingMovie() {\n  try {\n    const trendingMovies = await axios.get(\n      `${baseUrl}trending/movie/week?api_key=${key}`\n    );\n\n    return trendingMovies.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport async function getGenres() {\n  try {\n    const genres = await axios.get(\n      `${baseUrl}genre/movie/list?api_key=${key}&language=en-US`\n    );\n\n    return genres.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n  // return fetch(\n  //   `https://api.themoviedb.org/3/genre/movie/list?api_key=${key}&language=en-US`\n  // )\n  //   .then(res => res.json())\n  //   .then(result => {\n  //     genres = result.genres;\n  //     return result.genres;\n  //   });\n}\n\nexport async function getMovieById(movieId) {\n  try {\n    const movieDetails = await axios.get(\n      `${baseUrl}/movie/${movieId}?api_key=${key}`\n    );\n\n    return movieDetails.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport async function getSearchedMovies({ searhQuery, page = 1 }) {\n  try {\n    const movies = await axios.get(\n      `${baseUrl}/search/movie?api_key=${key}&query=${searhQuery}&page=${page}`\n    );\n\n    return movies.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\n// export function getSearchedMovies({ searhQuery, currentPage = 1 }) {\n//   return axios.get(\n//     `${baseUrl}/search/movie?api_key=${key}&query=${searhQuery}&page=${currentPage}`\n//   );\n// }\n\nexport async function getMovieCast(movieId) {\n  try {\n    const movieDetails = await axios.get(\n      `${baseUrl}/movie/${movieId}/credits?api_key=${key}`\n    );\n\n    return movieDetails.data.cast;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const movieDetails = await axios.get(\n      `${baseUrl}/movie/${movieId}/reviews?api_key=${key}`\n    );\n\n    return movieDetails.data.results;\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n"],"names":["CastCard","cast","map","id","profile_path","name","Box","as","p","flex","src","alt","width","height","useState","setCast","movieId","useParams","useEffect","getMovieCast","then","console","log","display","flexWrap","m","justifyContent","baseUrl","key","getTrendingMovie","axios","trendingMovies","data","results","error","message","getGenres","genres","getMovieById","movieDetails","getSearchedMovies","searhQuery","page","movies","getMovieReviews"],"sourceRoot":""}